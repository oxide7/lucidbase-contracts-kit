name: Contracts Validation

on:
  workflow_call:
    inputs:
      contract_path:
        description: 'Path to the contract file to validate'
        required: false
        default: 'contracts/00-runtime-guard.md'
        type: string
      expected_hash:
        description: 'Expected hash of the contract file'
        required: false
        default: ''
        type: string
      strict_mode:
        description: 'Enable strict validation mode'
        required: false
        default: 'false'
        type: boolean

jobs:
  validate-contract:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Calculate contract hash
      id: hash
      run: |
        if [ -f "${{ inputs.contract_path }}" ]; then
          HASH=$(git hash-object "${{ inputs.contract_path }}")
          echo "calculated_hash=$HASH" >> $GITHUB_OUTPUT
          echo "contract_exists=true" >> $GITHUB_OUTPUT
          echo "Contract hash: $HASH"
        else
          echo "calculated_hash=" >> $GITHUB_OUTPUT
          echo "contract_exists=false" >> $GITHUB_OUTPUT
          echo "Contract file not found: ${{ inputs.contract_path }}"
        fi

    - name: Validate contract hash
      if: inputs.expected_hash != '' && steps.hash.outputs.contract_exists == 'true'
      run: |
        if [ "${{ steps.hash.outputs.calculated_hash }}" != "${{ inputs.expected_hash }}" ]; then
          echo "❌ Contract hash mismatch!"
          echo "Expected: ${{ inputs.expected_hash }}"
          echo "Calculated: ${{ steps.hash.outputs.calculated_hash }}"
          echo ""
          echo "This indicates the contract has drifted from the expected version."
          echo "Please update your contract file or re-sync with the contracts kit."
          exit 1
        else
          echo "✅ Contract hash matches expected value"
        fi

    - name: Validate contract structure
      if: steps.hash.outputs.contract_exists == 'true'
      run: |
        echo "Validating contract structure..."
        
        # Check for required sections
        CONTRACT_FILE="${{ inputs.contract_path }}"
        
        # Check for version information
        if ! grep -q "Version:" "$CONTRACT_FILE"; then
          echo "❌ Contract missing version information"
          exit 1
        fi
        
        # Check for last updated date
        if ! grep -q "Last Updated:" "$CONTRACT_FILE"; then
          echo "❌ Contract missing last updated date"
          exit 1
        fi
        
        # Check for hash information
        if ! grep -q "Hash:" "$CONTRACT_FILE"; then
          echo "❌ Contract missing hash information"
          exit 1
        fi
        
        echo "✅ Contract structure validation passed"

    - name: Run drift detection
      if: steps.hash.outputs.contract_exists == 'true'
      run: |
        echo "Running drift detection..."
        
        # Check if contract is up to date (within last 30 days)
        LAST_UPDATED=$(grep "Last Updated:" "${{ inputs.contract_path }}" | sed 's/.*Last Updated: //')
        if [ -n "$LAST_UPDATED" ]; then
          LAST_EPOCH=$(date -d "$LAST_UPDATED" +%s 2>/dev/null || echo "0")
          CURRENT_EPOCH=$(date +%s)
          DAYS_DIFF=$(( (CURRENT_EPOCH - LAST_EPOCH) / 86400 ))
          
          if [ "$DAYS_DIFF" -gt 30 ]; then
            echo "⚠️  Warning: Contract was last updated $DAYS_DIFF days ago"
            if [ "${{ inputs.strict_mode }}" == "true" ]; then
              echo "❌ Strict mode enabled - failing due to stale contract"
              exit 1
            fi
          else
            echo "✅ Contract is up to date (last updated $DAYS_DIFF days ago)"
          fi
        fi

    - name: Generate validation report
      if: always()
      run: |
        echo "## Contract Validation Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Contract Path:** ${{ inputs.contract_path }}" >> $GITHUB_STEP_SUMMARY
        echo "**Contract Exists:** ${{ steps.hash.outputs.contract_exists }}" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.hash.outputs.contract_exists }}" == "true" ]; then
          echo "**Calculated Hash:** ${{ steps.hash.outputs.calculated_hash }}" >> $GITHUB_STEP_SUMMARY
          echo "**Expected Hash:** ${{ inputs.expected_hash }}" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.hash.outputs.calculated_hash }}" == "${{ inputs.expected_hash }}" ] && [ -n "${{ inputs.expected_hash }}" ]; then
            echo "**Status:** ✅ Hash validation passed" >> $GITHUB_STEP_SUMMARY
          elif [ -n "${{ inputs.expected_hash }}" ]; then
            echo "**Status:** ❌ Hash validation failed" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Status:** ⚠️  No expected hash provided" >> $GITHUB_STEP_SUMMARY
          fi
        else
          echo "**Status:** ❌ Contract file not found" >> $GITHUB_STEP_SUMMARY
        fi
