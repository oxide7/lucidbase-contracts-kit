name: Contracts Kit CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install pre-commit
      run: |
        python -m pip install --upgrade pip
        pip install pre-commit

    - name: Run pre-commit hooks
      run: pre-commit run --all-files

    - name: Validate contract structure
      run: |
        echo "Validating contract file structure..."
        
        if [ ! -f "contracts/00-runtime-guard.md" ]; then
          echo "❌ Contract file not found"
          exit 1
        fi
        
        # Check for required sections
        CONTRACT_FILE="contracts/00-runtime-guard.md"
        
        required_sections=(
          "Version:"
          "Last Updated:"
          "Hash:"
          "Runtime Guarantees"
          "Compliance Requirements"
          "Drift Detection"
        )
        
        for section in "${required_sections[@]}"; do
          if ! grep -q "$section" "$CONTRACT_FILE"; then
            echo "❌ Missing required section: $section"
            exit 1
          fi
        done
        
        echo "✅ Contract structure validation passed"

    - name: Validate version consistency
      run: |
        echo "Validating version consistency..."
        
        if [ ! -f "VERSION" ]; then
          echo "❌ VERSION file not found"
          exit 1
        fi
        
        VERSION_FILE=$(cat VERSION)
        CONTRACT_VERSION=$(grep "Version:" contracts/00-runtime-guard.md | sed 's/.*Version: //')
        
        if [ "$VERSION_FILE" != "$CONTRACT_VERSION" ]; then
          echo "❌ Version mismatch:"
          echo "  VERSION file: $VERSION_FILE"
          echo "  Contract file: $CONTRACT_VERSION"
          exit 1
        fi
        
        echo "✅ Version consistency check passed: $VERSION_FILE"

    - name: Test drift detection script
      run: |
        echo "Testing drift detection script..."
        
        if [ -f "scripts/detect-drift.sh" ]; then
          # Test script syntax
          bash -n scripts/detect-drift.sh
          echo "✅ Drift detection script syntax is valid"
        else
          echo "❌ Drift detection script not found"
          exit 1
        fi

    - name: Validate reusable workflow
      run: |
        echo "Validating reusable workflow..."
        
        if [ -f ".github/workflows/contracts-validation.yml" ]; then
          # Basic YAML syntax check
          python -c "import yaml; yaml.safe_load(open('.github/workflows/contracts-validation.yml'))"
          echo "✅ Reusable workflow YAML is valid"
        else
          echo "❌ Reusable workflow not found"
          exit 1
        fi

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
